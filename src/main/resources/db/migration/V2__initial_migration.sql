CREATE TABLE IF NOT EXISTS public.tbstage(
	idstage BIGSERIAL NOT NULL,
	name CHARACTER VARYING NOT NULL,
	description CHARACTER VARYING NOT NULL,
	amount_coins BIGINT NOT NULL,
	idclient BIGINT NOT NULL,
	is_active BOOLEAN NOT NULL,
	is_available BOOLEAN NOT NULL,
	is_prerequisite BOOLEAN NOT NULL,
	idcoin BIGINT NOT NULL,
    is_muted BOOLEAN NOT NULL,
    created_by CHARACTER VARYING,
    updated_by CHARACTER VARYING,
    created_at TIMESTAMP default now(),
    updated_at TIMESTAMP,


    FOREIGN KEY (idclient) REFERENCES tbclient(idclient),
    FOREIGN KEY (idcoin) REFERENCES tbcoin(idcoin),

	CONSTRAINT tbstage_pk PRIMARY KEY (idstage)
);

CREATE TABLE IF NOT EXISTS public.tbtrail(
	idtrail BIGSERIAL NOT NULL,
	name CHARACTER VARYING NOT NULL,
	description CHARACTER VARYING NOT NULL,
	author BIGINT NOT NULL,
	is_active BOOLEAN NOT NULL,
    idcoin BIGINT NOT NULL,
    map_image_path CHARACTER VARYING NOT NULL,
    map_music_path CHARACTER VARYING,
    conclusion_date TIMESTAMP NOT NULL,

    created_by CHARACTER VARYING,
    updated_by CHARACTER VARYING,
    created_at TIMESTAMP default now(),
    updated_at TIMESTAMP,

    FOREIGN KEY (author) REFERENCES tbuser(iduser),
    FOREIGN KEY (idcoin) REFERENCES tbcoin(idcoin),

	CONSTRAINT tbtrail_pk PRIMARY KEY (idtrail)
);

CREATE TABLE IF NOT EXISTS public.tbposition(
	x_axis BIGINT NOT NULL,
	y_axis BIGINT NOT NULL,

	CONSTRAINT tbposition_pk PRIMARY KEY (x_axis, y_axis)
);

CREATE TABLE IF NOT EXISTS public.tbtrail_map_position_path(
	x_axis BIGINT NOT NULL,
	y_axis BIGINT NOT NULL,
	idtrail BIGINT NOT NULL,

	FOREIGN KEY (x_axis, y_axis) REFERENCES tbposition(x_axis, y_axis),
    FOREIGN KEY (idtrail) REFERENCES tbtrail(idtrail),

	CONSTRAINT tbtrail_map_position_path_pk PRIMARY KEY (x_axis, y_axis, idtrail)
);

CREATE TABLE IF NOT EXISTS public.tbtrail_stage(
	idstage bigint NOT NULL,
	idtrail bigint NOT NULL,
	FOREIGN KEY (idstage) REFERENCES tbstage(idstage),
	FOREIGN KEY (idtrail) REFERENCES tbtrail(idtrail),

	CONSTRAINT tbtrail_stage_pk PRIMARY KEY (idstage, idtrail)
);

CREATE TABLE IF NOT EXISTS public.tbtrail_group(
	idtrail bigint NOT NULL,
	idgroup bigint NOT NULL,
	FOREIGN KEY (idtrail) REFERENCES tbtrail(idtrail),
	FOREIGN KEY (idgroup) REFERENCES tbgroup(idgroup),

	CONSTRAINT tbtrail_group_pk PRIMARY KEY (idtrail, idgroup)
);

CREATE TABLE IF NOT EXISTS public.tbtrail_user_registration(
	idtrail bigint NOT NULL,
	iduser bigint NOT NULL,
	started_trail_date TIMESTAMP,
	finished_trail_date TIMESTAMP,
	FOREIGN KEY (idtrail) REFERENCES tbtrail(idtrail),
	FOREIGN KEY (iduser) REFERENCES tbuser(iduser),

	CONSTRAINT tbtrail_user_registration_pk PRIMARY KEY (idtrail, iduser)
);

CREATE TABLE IF NOT EXISTS public.tbevent(
	idevent BIGSERIAL NOT NULL,
	name CHARACTER VARYING NOT NULL,
	description CHARACTER NOT NULL,
	is_active BOOLEAN NOT NULL,
    type BOOLEAN NOT NULL,
    idclient BIGINT NOT NULL,

    FOREIGN KEY (idclient) REFERENCES tbclient(idclient),

	CONSTRAINT tbevent_pk PRIMARY KEY (idevent)
);

--CREATE TABLE IF NOT EXISTS public.tbquestion(
--	id_question BIGSERIAL NOT NULL,
--	name CHARACTER VARYING NOT NULL,
--	descripton CHARACTER VARYING NOT NULL,
--	note_question BIGINT NOT NULL,
--	is_active BOOLEAN NOT NULL,
--	is_multiplechoice BOOLEAN NOT NULL,
--	idclient BIGINT NOT NULL,
--
--	FOREIGN KEY (idclient) REFERENCES tbclient(idclient),
--
--	CONSTRAINT tbquestion_pk PRIMARY KEY (id_question)
--);

CREATE TABLE public.tbquestion (
  id_question BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255),
  descripton VARCHAR(255),
  note_question BIGINT,
  is_active BOOLEAN,
  is_multiplechoice BOOLEAN,
  idclient BIGINT,
  CONSTRAINT pk_tbquestion PRIMARY KEY (id_question)
);

ALTER TABLE public.tbquestion ADD CONSTRAINT FK_TBQUESTION_ON_IDCLIENT FOREIGN KEY (idclient) REFERENCES public.tbclient (idclient);

CREATE TABLE IF NOT EXISTS public.tbtext(
	idtext BIGSERIAL NOT NULL,
	title CHARACTER VARYING NOT NULL,
	descripton CHARACTER VARYING NOT NULL,
	text CHARACTER VARYING NOT NULL,
	is_active BOOLEAN NOT NULL,
	is_read BOOLEAN NOT NULL,
	idevent BIGINT NOT NULL,
	idclient BIGINT NOT NULL,

	FOREIGN KEY (idevent) REFERENCES tbevent(idevent),
	FOREIGN KEY (idclient) REFERENCES tbclient(idclient),

	CONSTRAINT tbtext_pk PRIMARY KEY (idtext)

);

